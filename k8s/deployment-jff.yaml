apiVersion: v1
kind: ConfigMap
metadata:
  name: jff-config
data:
  issuer-config.json: |
    {
      "issuerUiUrl": "https://jff.walt.id",
      "issuerApiUrl": "https://jff.walt.id/issuer-api",
      "issuerClientName": "walt.id JFF Issuer Portal",
      "issuerDid": "did:jwk:eyJrdHkiOiJFQyIsInVzZSI6InNpZyIsImNydiI6IlAtMjU2Iiwia2lkIjoiOWUzZTI3MjliZWMzNDU3YTgzMGQ3MGFkNDNmZmMzYzkiLCJ4IjoiMTlFWXV4aWJ2bGpWUTdORXo3SFNwRjlTcnZPTTJmMkJPaE9UWGlsa0I3OCIsInkiOiJUdGI4WTdQVmhReGZ4UURWQkFIYklvbUNhWWo0VGt3ZEZ3OHMwVWxJOVFZIiwiYWxnIjoiRVMyNTYifQ",
      "wallets": {
        "walt.id": {
          "id": "walt.id",
          "url": "https://wallet.walt-test.cloud",
          "presentPath": "api/siop/initiatePresentation/",
          "receivePath" : "api/siop/initiateIssuance/",
          "description": "walt.id web wallet"
        }
      }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jff-data-volume-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: walletkit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: walletkit
  template:
    metadata:
      labels:
        app: walletkit
      annotations:
        deployment/id: "_DEFAULT_DEPLOYMENT_"
    spec:
      containers:
        - name: walletkit
          image: waltid/walletkit:latest
          volumeMounts:
            - name: jff-config
              mountPath: "/waltid/wallet/config/"
              readOnly: true
            - mountPath: "/waltid/wallet/data/"
              name: jff-data
            - name: socket-keystore
              mountPath: "/waltid/wallet/keystore/servercert.p12"
              subPath: servercert.p12
              readOnly: true
          envFrom:
          - secretRef:
              name: wallet-secret
          - secretRef:
              name: socket-secret
          args:
            - run
          ports:
            - containerPort: 8080
              name: http-api
      volumes:
        - name: jff-config
          configMap:
            name: jff-config
        - name: jff-data
          persistentVolumeClaim:
            claimName: jff-data-volume-claim
        - name: socket-keystore
          secret:
            secretName: socket-keystore-secret
            items:
              - key: servercert.p12
                path: servercert.p12
---
kind: Service
apiVersion: v1
metadata:
  name: walletkit
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-api
      protocol: TCP
  selector:
    app: walletkit
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: issuer-portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: issuer-portal
  template:
    metadata:
      labels:
        app: issuer-portal
      annotations:
        deployment/id: "_DEFAULT_DEPLOYMENT_"
    spec:
      containers:
        - name: ssikit-issuer-portal
          image: waltid/ssikit-issuer-portal:latest
          ports:
            - containerPort: 80
              name: http-api
---
kind: Service
apiVersion: v1
metadata:
  name: issuer-portal
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-api
      protocol: TCP
  selector:
    app: issuer-portal
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jffingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - jff.walt.id
      secretName: jff-tls-secret
  rules:
    - host: jff.walt.id
      http:
        paths:
          - path: /api/
            pathType: Prefix
            backend:
              service:
                name: walletkit
                port:
                  number: 80
          - path: /issuer-api/
            pathType: Prefix
            backend:
              service:
                name: walletkit
                port:
                  number: 80
          - path: /webjars
            pathType: Prefix
            backend:
              service:
                name: walletkit
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: issuer-portal
                port:
                  number: 80
